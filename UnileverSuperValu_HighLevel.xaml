<Activity mc:Ignorable="sap sap2010" x:Class="UnileverSuperValu_HighLevel" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1608.8,1169.6" sap2010:WorkflowViewState.IdRef="UnileverSuperValu_HighLevel_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="- Below is high level of process.&#xA;- Happy Path : Initialize Config file -&gt; Initialize pplication -&gt; Get Data(Excel) -&gt; Process Data(Add Item to Queue) -&gt; Close Application(Excel) -&gt; Finialize&#xA;- Exception : &#xA;1. Exception state will handle all the exceptions&#xA;2. 3 retries to initialize the application(excel) and to load the data in queue." DisplayName="UnileverSuperValu_HighLevel" sap:VirtualizedContainerService.HintSize="1568.8,1089.6" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">10,202.4</av:Point>
        <x:Double x:Key="StateContainerWidth">1554.7670546105637</x:Double>
        <x:Double x:Key="StateContainerHeight">960.8</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">70,236.24 100,236.24 100,237.6 137.6,237.6</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="* Read project configuration&#xA;* Initialise variales&#xA;* Check assets, queue, etc, are set up" DisplayName="InitConfig" sap:VirtualizedContainerService.HintSize="232.8,192" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <Sequence DisplayName="InitConfig" sap:VirtualizedContainerService.HintSize="336.8,720" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;InitConfig : Initialised&quot;]" />
          <Assign DisplayName="Initialise exception to null" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Exception">[systemException]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Initialise succeeded to False" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[succeeded]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314.4,132.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="SetCurrentDirectory" TargetType="si:Directory">
            <InArgument x:TypeArguments="x:String">[baseDirectory + "\InitConfig"]</InArgument>
          </InvokeMethod>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitConfig workflow" sap:VirtualizedContainerService.HintSize="314.4,89.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="InitConfig.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="s:Exception" x:Key="out_SystemException">[systemException]</OutArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Succeeded">[succeeded]</OutArgument>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="out_ProjectConfig">[projectConfig]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">137.6,132</av:Point>
          <av:Size x:Key="ShapeSize">232.8,192</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">218.71856238049881</x:Double>
          <x:Double x:Key="StateContainerHeight">94.804372353963629</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Exit>
        <Sequence DisplayName="Init Exit" sap:VirtualizedContainerService.HintSize="336.8,390.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314.4,132.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="SetCurrentDirectory" TargetType="si:Directory">
            <InArgument x:TypeArguments="x:String">[baseDirectory]</InArgument>
          </InvokeMethod>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;InitConfig : Completed&quot;]" />
        </Sequence>
      </State.Exit>
      <State.Transitions>
        <Transition DisplayName="Init Error" sap:VirtualizedContainerService.HintSize="429.6,509.6" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">242.36,324 242.36,551.2 318.4,551.2</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[systemException IsNot Nothing]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="* Handle a System Exception&#xD;&#xA;* Retry (if max. retry count not exceeded)" DisplayName="Exception" sap:VirtualizedContainerService.HintSize="243.2,184" sap2010:WorkflowViewState.IdRef="State_12">
              <State.Entry>
                <Sequence DisplayName="InitConfig" sap:VirtualizedContainerService.HintSize="676,1772.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="653.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Exception : Initialised&quot;]" />
                  <Assign DisplayName="Increment System Exception Counter" sap:VirtualizedContainerService.HintSize="653.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[maxRetriesSystemExceptionCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[maxRetriesSystemExceptionCounter + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[maxRetriesSystemExceptionCounter = projectConfig(&quot;MaxProjectRetries&quot;)]" DisplayName="Send Email if max retry reached" sap:VirtualizedContainerService.HintSize="653.6,708" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="336.8,558.4" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[projectConfig(&quot;MaxRetriesEmailTo&quot;).ToString]" DisplayName="Get Send To Email" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[maxRetriesSendToEmail]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[projectConfig(&quot;MaxRetriesEmailCredential&quot;).ToString]" DisplayName="Get Email Credential" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[maxRetriesPassword]" Username="[maxRetriesUserID]" />
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" Value="{x:Null}" AssetName="[projectConfig(&quot;MaxRetriesEmailSubject&quot;).ToString]" DisplayName="Get Email Subject" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2" />
                        <Assign DisplayName="Convert password to plain text" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[maxRetriesPlainPassword]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(String.Empty, maxRetriesPassword).Password]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SendExchangeMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Server="{x:Null}" TimeoutMS="{x:Null}" Body="Hi There!!" DisplayName="Send exception email" Domain="xx.xx.COM" EmailAutodiscover="test@xyz.com" ExchangeVersion="Exchange2010" From="my Bot" sap:VirtualizedContainerService.HintSize="314.4,146.4" sap2010:WorkflowViewState.IdRef="SendExchangeMail_1" IsBodyHtml="False" IsDraft="False" Name="UnileverSuperValu Robot" Password="[maxRetriesPlainPassword]" SaveCopy="False" Subject="[maxRetriesSubject]" To="[maxRetriesSendToEmail]" User="[maxRetriesUserID]" />
                      </Sequence>
                    </If.Then>
                  </If>
                  <If Condition="[systemException Is Nothing]" DisplayName="If the does not email" sap:VirtualizedContainerService.HintSize="653.6,209.6" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Assign DisplayName="Create new exception" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[systemException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[new System.Exception("Exception handler called with null exception")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <maes:KeyExistsInDictionary x:TypeArguments="x:String, ui:GenericValue" Dictionary="[projectConfig]" DisplayName="Key exists in dictionary" sap:VirtualizedContainerService.HintSize="653.6,135.2" sap2010:WorkflowViewState.IdRef="KeyExistsInDictionary`2_1" Key="CommonExeptionHandler" Result="[exeptionHandlerInitialised]" />
                  <If Condition="[exeptionHandlerInitialised]" DisplayName="Check for exceptionHandler" sap:VirtualizedContainerService.HintSize="653.6,242.4" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Error Occuered : &quot; &amp; systemException.Message.ToString]" />
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Fatal" Message="[&quot;The process has terminated early.&quot;]" />
                    </If.Else>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">318.4,450</av:Point>
                  <av:Size x:Key="ShapeSize">243.2,184</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">228.94775204254205</x:Double>
                  <x:Double x:Key="StateContainerHeight">87.284042249621848</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Exit>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Exception : Completed&quot;]" />
              </State.Exit>
              <State.Transitions>
                <Transition DisplayName="T2" sap2010:WorkflowViewState.IdRef="Transition_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">561.6,551.2 938.56,551.2 938.56,540.8</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">31</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <State x:Name="__ReferenceID2" DisplayName="Final State" sap:VirtualizedContainerService.HintSize="114.4,61.6" sap2010:WorkflowViewState.IdRef="State_11" IsFinal="True">
                      <State.Entry>
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;done&quot;]" TopMost="True" />
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">892.8,479.2</av:Point>
                          <av:Size x:Key="ShapeSize">114.4,61.6</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </State>
                  </Transition.To>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="x:String" Name="maxRetriesUserID" />
                <Variable x:TypeArguments="ss:SecureString" Name="maxRetriesPassword" />
                <Variable x:TypeArguments="x:String" Name="maxRetriesSendToEmail" />
                <Variable x:TypeArguments="x:Int32" Default="0" Name="maxRetriesSystemExceptionCounter" />
                <Variable x:TypeArguments="x:String" Name="maxRetriesPlainPassword" />
                <Variable x:TypeArguments="x:String" Name="maxRetriesSubject" />
                <Variable x:TypeArguments="x:Boolean" Name="exeptionHandlerInitialised" />
              </State.Variables>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="Succeeded" sap:VirtualizedContainerService.HintSize="429.6,509.6" sap2010:WorkflowViewState.IdRef="Transition_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">370.4,228 400.4,228 400.4,236 523.6,236</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">41</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[succeeded]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="* Initialise applications&#xA;* Ensure applications are open and responsive&#xA;* Log into applications" DisplayName="InitApps" sap:VirtualizedContainerService.HintSize="243.2,200" sap2010:WorkflowViewState.IdRef="State_10">
              <State.Entry>
                <Sequence DisplayName="Set up and run InitApps" sap:VirtualizedContainerService.HintSize="336.8,820" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;InitApps : Initialised&quot;]" />
                  <Assign DisplayName="Initialise exception to null" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[systemException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Initialise succeeded to False" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[succeeded]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314.4,132.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="SetCurrentDirectory" TargetType="si:Directory">
                    <InArgument x:TypeArguments="x:String">[baseDirectory + "\InitApps"]</InArgument>
                  </InvokeMethod>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitConfig workflow" sap:VirtualizedContainerService.HintSize="314.4,89.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="InitApps.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="s:Exception" x:Key="out_SystemException">[systemException]</OutArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Succeeded">[succeeded]</OutArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="inout_ProjectConfig">[projectConfig]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[projectConfig(&quot;CommonLog&quot;).ToString]" TopMost="True" />
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">523.6,126</av:Point>
                  <av:Size x:Key="ShapeSize">243.2,200</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">228.94775204254205</x:Double>
                  <x:Double x:Key="StateContainerHeight">87.284042249621848</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Exit>
                <Sequence DisplayName="InitApps Exit" sap:VirtualizedContainerService.HintSize="336.8,390.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314.4,132.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="SetCurrentDirectory" TargetType="si:Directory">
                    <InArgument x:TypeArguments="x:String">[baseDirectory]</InArgument>
                  </InvokeMethod>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;InitApps : Completed&quot;]" />
                </Sequence>
              </State.Exit>
              <State.Transitions>
                <Transition DisplayName="T1" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">645.2,326 645.2,356 427.84,356 427.84,450</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="succeeded" />
      <Variable x:TypeArguments="s:Exception" Default="[Nothing]" Name="systemException" />
      <Variable x:TypeArguments="x:String" Default="[System.IO.Directory.GetCurrentDirectory()]" Name="baseDirectory" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" Default="[new Dictionary(Of String, GenericValue)]" Name="projectConfig" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>